Q9

class main{
    public static void main(String []args){
        System.out.println("Hi");
        main obj=new main();
        obj.main1("Hello world");
        obj.main2("Tom","Jerry");
    }
    public void main1(String s1){
        System.out.println("overloaded: "+s1);
    }
    public void main2(String str1,String str2){
        System.out.println("overloaded: "+str1+" & "+str2);
    }
}


class visa{
    public void rewardpoints(String type,double amount){
        double reward=amount*0.01;
        System.out.println(reward);
        
    }
}
class hpvisa extends visa{
    public void rewardpoints(String type,double amount){
        if(type=="fuel"){
            System.out.println((amount*0.01)+10);
        }
        else
        {
           System.out.println(amount*0.01); 
        }
    }
}
class main{
    public static void main(String []args){
        int choice=2;
       
        visa obj=new visa();
        visa obj1=new hpvisa();
        if(choice==2){
            obj1.rewardpoints("cat",1000);
        }
        else{
            obj.rewardpoints("fuel",1000);
        }
        
    }
}


Q 5

// You are using Java
import java.util.*;
class main{
    public static void main(String []args){
        Scanner sc=new Scanner(System.in);
        int n1=sc.nextInt();
        if(n1==1){
            double radius=sc.nextDouble();
            shape obj=new circle(radius);
            obj.name();
        }else if(n1==2){
            double len=sc.nextDouble();
            double breadth=sc.nextDouble();
            shape obj=new rectangle(len,breadth);
            obj.name();
        }else if(n1==3){
            double b=sc.nextDouble();
            double h=sc.nextDouble();
           triangle ob=new triangle(b,h);
           ob.name();
        }else {
            System.out.println("Invalid");
        }
    
    }
    
}  

class shape{
    double area;
    public void name(){
        area =0;
    }
}
class circle extends shape{
    
    double radius;
    circle(double radius){
        this.radius=radius;
}
    public void name(){
        System.out.println(3.14*(radius*radius));
    }
    
}
class rectangle extends shape{
    
    double len;
    double breadth;
    rectangle(double len,double breadth){
        this.len=len;
        this.breadth=breadth;
    }
    public void name(){
        System.out.println(len*breadth);
    }
    
}
class triangle extends shape{
    double base;
    double height;
    triangle(double b, double h){
        this.base=b;
        this.height=h;
    }
     public void name(){
        System.out.println(0.5*(base*height));
    }
    
}



Matrix


// Java program to rotate a matrix
import java.lang.*;
import java.util.*;

class GFG
{
	static int R = 4;
	static int C = 4;

	// A function to rotate a matrix
	// mat[][] of size R x C.
	// Initially, m = R and n = C
	static void rotatematrix(int m,
					int n, int mat[][])
	{
		int row = 0, col = 0;
		int prev, curr;

		/*
		row - Starting row index
		m - ending row index
		col - starting column index
		n - ending column index
		i - iterator
		*/
		while (row < m && col < n)
		{
	
			if (row + 1 == m || col + 1 == n)
				break;
	
			// Store the first element of next
			// row, this element will replace
			// first element of current row
			prev = mat[row + 1][col];
	
			// Move elements of first row
			// from the remaining rows
			for (int i = col; i < n; i++)
			{
				curr = mat[row][i];
				mat[row][i] = prev;
				prev = curr;
			}
			row++;
	
			// Move elements of last column
			// from the remaining columns
			for (int i = row; i < m; i++)
			{
				curr = mat[i][n-1];
				mat[i][n-1] = prev;
				prev = curr;
			}
			n--;
	
			// Move elements of last row
			// from the remaining rows
			if (row < m)
			{
				for (int i = n-1; i >= col; i--)
				{
					curr = mat[m-1][i];
					mat[m-1][i] = prev;
					prev = curr;
				}
			}
			m--;
	
			// Move elements of first column
			// from the remaining rows
			if (col < n)
			{
				for (int i = m-1; i >= row; i--)
				{
					curr = mat[i][col];
					mat[i][col] = prev;
					prev = curr;
				}
			}
			col++;
		}

			// Print rotated matrix
			for (int i = 0; i < R; i++)
			{
				for (int j = 0; j < C; j++)
				System.out.print( mat[i][j] + " ");
				System.out.print("\n");
			}
	}

/* Driver program to test above functions */
	public static void main(String[] args)
	{
	// Test Case 1
	int a[][] = { {1, 2, 3, 4},
				{5, 6, 7, 8},
				{9, 10, 11, 12},
				{13, 14, 15, 16} };

	// Test Case 2
	/* int a[][] = new int {{1, 2, 3},
							{4, 5, 6},
							{7, 8, 9}
						};*/
	rotatematrix(R, C, a);
	
	}
}

// This code is contributed by Sahil_Bansall




				or
				
				
				import java.io.*;
class Solution {
   static void rotateMatrix(
      int n, int matrix[][]){
         for (int i = 0; i < n; i++) {
            for (int j = i; j < n; j++) {
               int temp= matrix[i][j];
               matrix[i][j]= matrix[j][i];
               matrix[j][i]= temp;
            }
         }
   for(int i=0;i<n;i++){
      int top=0;
      int bottom = n-1;
      while(top<bottom){
         int temp = matrix[top][i];
         matrix[top][i]=matrix[bottom][i];
         matrix[bottom][i] = temp;
         top++;
         bottom--;
      }
   }
}
static void displayMatrix(int N, int mat[][]){
   for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++)
         System.out.print(" " + mat[i][j]);
         System.out.print("\n");
      }
      System.out.print("\n");
   }
   public static void main(String[] args){
      int N = 3;
      int mat[][] = {
         {1,2,3},
         {4,5,6},
         {7,8,9}
      };
      rotateMatrix(N, mat);
      displayMatrix(N, mat);
   }
}
